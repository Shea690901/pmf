Path: liuida!sunic!mcsun!uunet!cs.utexas.edu!samsung!uakari.primate.wisc.edu!unmvax!uokmax!news
From: jds@littlewood.math.okstate.edu (Jennifer "Moira" Smith)
Newsgroups: rec.games.mud
Subject: FAQ #2: Clients and Servers
Summary: all about clients and servers
Keywords: faq clients servers muds ftp sites
Message-ID: <1991Sep16.160822.21864@uokmax.ecn.uoknor.edu>
Date: 16 Sep 91 16:08:22 GMT
Sender: news@uokmax.ecn.uoknor.edu (Nets)
Organization: Utter Chaos
Lines: 317


FREQUENTLY ASKED QUESTIONS:  Clients and Servers

Last Updated: Mon Sep 16 11:05:57 CDT 1991

This is part 2 of a series of FAQs.  You should read #1 first.

Disclaimer: The authors and sources of this document are generally
            biased towards TinyMUDs and their ilk, since we play
            them more.

"What are clients?"

  Clients are programs, usually written in C, that connect up to
  servers.  Telnet is one such client program.  Many clients written
  for MUDs have special added bonus features through which they filter
  the output; most, for instance, separate your input line from the
  output lines and wraps words after 80 columns.  Some also have a macro-
  writing capability which allows the user to execute several commands with
  just a few keypresses.  Some allow you to highlight output coming from
  certain players or suppress it altogether.  Still other clients make
  the sometimes tedious task of building new areas a breeze.

"Where do I get clients?"

  Listed below is a list of clients, and a site or two where they can
  be ftped from. If the site is down, your best bet is to ask around.
  In general, watnxt3.ucr.edu (192.31.146.125) is a good place to look.
 
"Do I need a special operating system to run clients?"
 
  Yep, you sure do.  Most use BSD Unix, although there are clients which
  also run under SysV Unix with networking, VMS with either MultiNet or
  Wollongong networking, and there's even one for IBM VM.

"What clients are out there, and how are they different?"

  Here's a reasonable accurate listing of available clients. Please note
  that the authors have not tested each of these, and they're not guaranteed
  to work for you. 

  UNIX clients appear first, VMS clients last.  EMACS clients for UNIX
  appear after those written in C.

  Name            Description
  ----            -----------

  TinyTalk        Runs on BSD or SysV with networking. Latest version is 1.1.7.
                  Designed primarily for TinyMUD-style muds. Features include
                  hiliting (whispers, pages, and users), gag, auto-login,
                  simple macros, logging, and cyberportals.
                  jaguar.cs.wisc.edu(128.105.2.202):/pub/tinytalk
                  watnxt3.ucr.edu(192.31.146.125):/pub/mud_archive/mud_clients
                  spamalot.ecn.uoknor.edu(129.15.24.15):/pub/mud_clients

  TinyFugue       Runs on BSD or SysV with networking. Latest version is 1.5.4.
                  Designed primarily for TinyMUD-style muds, although will run
                  on LPs and Dikus. Features include regexp hilites, regexp
                  gags, auto-login, macros, line editing, screen mode,
                  triggers, cyberportals, logging, file and command uploading,
                  shells, and multiple connects.
                  watnxt3.ucr.edu(192.31.146.125):/pub/mud_archive/mud_clients
                  spamalot.ecn.uoknor.edu(129.15.24.15):/pub/mud_clients

  TclTT           Runs on BSD. Latest version is 0.9. Designed primarily for
                  TinyMUD-style muds. Features include regexp hilites, regexp
                  gags, logging, auto-login, partial file uploading, triggers,
                  and is programmable.
                  ftp.white.toronto.edu(128.100.2.160):/pub/muds/tcltt
                  watnxt3.ucr.edu(192.31.146.125):/pub/mud_archive/mud_clients

  VT              Runs on BSD. Latest version is 1.2a. Usable for both LPMuds
                  and TinyMUD-style muds. Features include screen mode, 
                  line editing, multiple connects, macros, file uploading,
                  and triggers.
                  spamalot.ecn.uoknor.edu(129.15.24.15):/pub/mud_clients

  LPTalk          Runs on BSD or SysV with networking. Latest version is 1.2.1.
                  Designed primarily for LPmuds. Features include hiliting, 
                  gags, auto-login, simple macros, logging.
                  watnxt3.ucr.edu(192.31.146.125):/pub/mud_archive/mud_clients
                  jaguar.cs.wisc.edu(128.105.1.202):/pub/contrib/lptalk

  SayWat          Runs on BSD. Latest version is 0.2.9. Designed primarily for
                  TinyMUD-style muds. Features include regexp hilites, 
                  regexp gags, macros, triggers, logging, and file uploading.
                  watnxt3.ucr.edu(192.31.146.125):/pub/mud_archive/mud_clients

  PMF             Runs on BSD. Latest version is 1.11. Usable for both LPmuds
                  and TinyMUD-style muds. Features include line editing,
                  auto-login, macros, triggers, gags, logging, file uploads,
                  an X-window interface, and ability to do Sparc sounds.
                  ftp.lysator.liu.se(130.236.254.1):/pub/lpmud/clients
                  watnxt3.ucr.edu(192.31.146.125):/pub/mud_archive/mud_clients
                  jaguar.cs.wisc.edu(128.105.1.202):/pub/contrib/pmf
  
  TinyView        Runs on BSD. Latest version is 1.0. Designed for use primarily
                  for TinyMUD-style muds. Features include screen mode, macros,
                  history buffers, line editing, and multiple connects.
                  altair.csustan.edu(130.17.1.50):/pub/mud/mud_misc
                  watnxt3.ucr.edu(192.31.146.125):/pub/mud_archive/mud_clients

  MUD.el          Runs on GNU Emacs. Usable for TinyMUD-style muds, LPmuds,
                  and MOOs. Features include auto-login, macros, logging,
                  cyberportals, screen mode, and it is programmable.
                  watnxt3.ucr.edu(192.31.146.125):/pub/mud_archive/mud_clients
  
  TinyTalk.el     Runs on GNU Emacs. Latest version is 0.5. Designed primarily
                  for TinyMUD-style muds. Features include auto-login, macros,
                  logging, screen mode, and it is programmable.
                  watnxt3.ucr.edu(192.31.146.125):/pub/mud_archive/mud_clients

  LPmud.el        Runs on GNU Emacs. Designed primarily for LPmuds. Features
                  include macros, triggers, file uploading, logging, screen
                  mode, and it is programmable.
                  ftp.lysator.liu.se(130.236.254.1):/pub/lpmud/clients
                  watnxt3.ucr.edu(192.31.146.125):/pub/mud_archive/mud_clients
                  jaguar.cs.wisc.edu(128.105.1.202):/pub/contrib/lpmud-el

  MyMud.el        Runs on GNU Emacs. Latest version is 1.29. Designed primarily
                  for LPmuds and Dikus. Features include screen mode,
                  auto-login, macros, triggers, autonavigator, and it is
                  programmable.
                  golem.ps.uci.edu(128.200.29.9):/dist

  TINT            Runs on VMS with MultiNet networking. Latest version is 2.2.
                  Designed primarily for TinyMUD-style muds. Features include
                  hiliting (whispers, pages, users), gags, file uploading,
                  simple macros, screen mode. See also TINTw.
                  watnxt3.ucr.edu(192.31.146.125):/pub/mud_archive/mud_clients

  TINTw           Runs on VMS with Wollongong networking. See TINT.
                  spamalot.ecn.uoknor.edu(129.15.24.15):/pub/mud_clients
  
  DINK            Runs on VMS with either Wollongong or MultiNet networking.
                  spamalot.ecn.uoknor.edu(129.15.24.15):/pub/mud_clients

  FooTalk         Runs on VMS with MultiNet networking and BSD Unix. Primarily
                  designed for TinyMUD-style muds. Features include screen
                  mode, and it is programmable. See RispTalk below.
                  watnxt3.ucr.edu(192.31.146.125):/pub/mud_archive/mud_clients
                  lancelot.avalon.cs.cmu.edu(129.2.242.79):/pub

  RispTalk        Runs on BSD Unix. FooTalk with an interpreter for converting
                  a lispish language into footalk's language. See FooTalk above.
                  spamalot.ecn.uoknor.edu(129.15.24.15):/pub/mud_clients

  REXXTALK        Runs on IBM VM. Designed primarily for TinyMUD-style muds. 
                  Features include screen mode, logging, macros, triggers,
                  hilites, and gags. Allows some IBM VM programs to be run
                  while connected to a foreign host, such as TELL and MAIL.
                  (Warning: Ftp-ing the module sometimes does not work. Try
                  emailing JWALES3@UA1VM.BITNET, and he should be able to
                  send you the module via bitnet.)
                  watnxt3.ucr.edu(192.31.146.125):/pub/mud_archive/mud_clients
                  spamalot.ecn.uoknor.edu(129.15.24.15):/pub/mud_clients

  A few quick definitions:
    Auto-login -- Automatically logs into the game for you.
    Hiliting -- Allows boldface or other emphasis to be applied to some
  text.  Often allowed on particular types of output (e.g. whispers), or
  particular users.  "Regexp" means that UNIX-style regular expressions
  can be used to select text to hilite.
    Gag -- Allows some text to be suppressed.  The choice of what to
  suppress is often similar to hiliting (users or regular expressions).
    Macros -- Allows new commands to be defined.  How complex a macro
  can be varies greatly between clients; check the documentation for
  details.
    Logging -- Allows output from the MUD to be recorded in a file.
    Cyberportals -- Supports special MUD features which can automatically
  reconnect you to another MUD server.
    Screen Mode -- Supports some sort of screen mode (beyond just scrolling
  your output off the top of the screen) on some terminals.  The exact
  support varies.
    Triggers -- Supports events which happen when certain actions on the
  MUD occur (e.g. waving when a player enters the room).  (This can
  nearly always be trivially done on programmable clients, even if it
  isn't built in.)
    Programmable -- Supports some sort of client-local programming.
  Read the documentation.

  Some of these clients are more featured than others, and some require
  a fair degree of computer literacy.  TinyTalk and TinyFugue are
  among the easiest to learn; Tcltt is more professional.  Caveat Emptor.
  Since many MUDders write their own clients, this list can never be
  complete.  As above, ask around.

"Is there any problem with running a client?"

  Not usually.  Clients can be large when compiled, especially if they
  have lots of nifty features.  They don't take up much CPU time at all.
  It is recommended that you ask your friendly systems administrator or
  other machine-responsible person if it's okay for you to install one
  on the system, if only for the reason that someone else might already
  have done so, and you might be able to save space by sharing with them.
  If there's a no games policy at your site, don't try to sneak by it with
  a client -- their activities are easily detectable.  Be good.

"Okay, I know a client is that which connects to a server.  What is a server?"

  ...That which is connected to by a client.  A server is a program which 
  accepts connections, receives data, mulls it over, and sends out some
  output.  In the MUD world, the server keeps track of the database, the
  current players, the  rules, and sometimes the time (or the 'heartbeat').
  Servers are usually very large C programs which maintain a small-to-enormous
  database of the objects, rooms, players and miscellany of the MUD. 
  Because of their size and their constant computational activities, servers
  can be extremely CPU-intensive and can even be crippling to any other work
  done on that computer.  Do not ever run a MUD server on a machine illicitly
  or without express permission from the person responsible for the machine.
  Many universities and companies have strict policies about that sort of
  behavior which you don't want to cross.

  Of course, people who don't know any better start up illicit MUDs all the
  time.  Apart from the possibility of losing all your work and energy to
  one press of a sysadmin's finger, there's no harm done to the player.
  But we must stress: running a MUD where you shouldn't can get you into
  a whole new world of hurt.  Don't take the chance, it's not worth it.

->  SEE ALSO: Frequently Asked Questions post #1.

"Are there lots of different kinds of MUD servers?"

  There are probably as many MUD server types as there are MUDs.  Since
  everyone has their own opinions as to what MUDs should be like, and since
  the server source can be edited, most MUDs have site-specific fixtures
  in them.  However, there are a few main protoMUDs (also called 'vanilla
  versions' because they haven't been 'flavored' yet).  Note that this
  list is not complete.  Note that it may contain errors in fact or
  judgement, but is deemed pretty much right as of this writing.

        -MUD: the original, by Richard Bartle and Roy Trubshaw.  Source
         not readily available.  Written in 1979.  Rumored to be stable
         and not too big.

        -TinyMUD: the original social-style MUD.  Not programmable.
         Source generally available.  Stable.  Biggish.

        -TinyMUCK v1.*: TinyMUD with some extensions.  Not programmable.
         Source generally available.  Stable.  Biggish.

        -TinyMUCK v2.*: TinyMUCK v1.* with MUF (multiple user forth) as a
         programming language.  New version expected real soon now. 
         Source generally available.  Large.  Demistable.

        -TeenyMUD: Stripped down TinyMUD.  Not programmable.  Small.
         Stable if you know what you're doing.

        -TinyMUSH: TinyMUD with lots and lots of features, a programming
         language, flags galore.  Source readily available.  Huge.  A
         bit unstable. 

        -TinyMUSE: TinyMUSH with extensions.  As TinyMUSH.

        -UberMUD: A maximum strength MUD with a language and UNIX-style
         permissions.  Large.  Demistable.  For professionals only.

        -UnterMUD: A network-oriented MUD.  Tiny.  Stable.  Nice to your CPU.
         Source available.  Demiprogrammable.  Our favorite.

        -AberMUD: One of the first adventure-based MUDs.  Mostly stable. 
         Source generally available.  Not too large.

        -LPMUD: The warhorse of adventure-based MUDs.  Enormous.  Demistable.
         Source available.  Programming language is a bit like C.

        -DikuMUD: The next generation after LPMUD.  Large, demistable,
         available.

        -MOO:  an 'object oriented' MUD.  C-like programming language.  
         medium-sized, somewhat available, a bit tricky.

Note: just because we say something's available doesn't mean we have it.
Please don't ask us; ask around for ftp sites that might have them, or
try looking on watnxt3.ucr.edu (192.31.146.125).

"My [client, server] won't compile!  What do I do?"

  Your first best bet is to check out the documentation and see if someone
  is listed as 'supporting' (i.e. generally responsible for) the program.
  If they are, send them a short, well-written e-mail note explaining your
  hardware and software completely as well as a transcript of the error.
  Do not post to the internet unless all other realistic options have been
  considered and taken -- generally speaking, most readers will not be
  interested in your dilemma and may get upset that you're wasting their
  time.  Since MUDs have probably been compiled on every single platform
  since the Cyber 3000, there's a good chance that asking around the
  subculture will get you the answers you crave.

"What's a cyborg, and should I be one?"

  A cyborg is defined as 'part man, part machine.'  In the MUD world, this
  means that your client is doing some of the work for you.  For instance,
  you can set up many clients to automatically greet anyone entering the
  room.  You can also set up clients to respond to certain phrases (or
  'triggers').  Of course, this can have disastrous consequences.  If I
  set my client up to say hi every time you say hi, and you do likewise,
  our clients will frantically scream hi at each other over and over
  until we manage to escape.  Needless to say, runaway automation is
  very heavily frowned upon by anyone who sees it.  If you program your
  client to do anything special, first make sure that it cannot go
  berserk and overload the MUD.

"So I should read the documentation of whatever client I select."

  Yes.

-------------------------------------------------------------------------------
  This posting has been generated as a public service.  If you have any
  suggestions, questions, additions, comments or criticisms concerning this
  posting, contact either Moira (jds@math.okstate.edu) or Rhodesia
  (fortony@cs.uiuc.edu).  The other Frequently Asked Questions (FAQ)
  posting contains information on MUDs and MUDding itself.  While these
  items aren't necessary, they make the game much more playable.  We'd like
  to thank IronThoughts and Tarrant for their help in writing this FAQ, and
  everyone else for helpful comments and suggestions.
  Have fun!  - Rhodesia and Moira

